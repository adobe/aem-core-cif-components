version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1

common:
  restore_cache: &restore_cache
    restore_cache:
      keys: 
        - maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
        - maven-repo-v2-{{ arch }}-{{ .Branch }}
        - maven-repo-v2-

  integration_test_steps: &integration_test_steps
    steps:
      - checkout
      - *restore_cache
      - attach_workspace:
          at: /home/circleci/build
      - run:
          name: Integration tests
          command: node .circleci/ci/it-tests.js
      - store_test_results:
          path: it/http/target/failsafe-reports
      # Save test results as artifacts
      - store_artifacts:
          path: it/http/target/failsafe-reports
      # Save AEM logs as artifacts
      - store_artifacts:
          path: logs
      # Save Jacoco coverage report as artifact
      - store_artifacts:
          path: bundles/core/target/site/jacoco
      - store_artifacts:
          path: examples/bundle/target/site/jacoco

  docker_auth: &docker_auth
    auth:
      username: $DOCKER_USER
      password: $DOCKER_PASS

executors:
  cif_executor:
    docker:
      - image: circleci/openjdk:11-stretch-node

jobs:
  build:
    executor: cif_executor
    working_directory: /home/circleci/build
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - run:
          name: Build
          command: node .circleci/ci/build.js
      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v2-{{ arch }}-{{ .Branch }}-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /home/circleci/build
          paths:
            - configuration.json
            - bundles/core/target/*.jar
            - ui.apps/target/*.zip
            - ui.config/target/*.zip
            - examples/bundle/target/*.jar
            - examples/ui.apps/target/*.zip
            - examples/ui.config/target/*.zip
            - examples/ui.content/target/*.zip
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results/junit
      - codecov/upload:
          flags: unittests

  karma:
    docker:
      - image: circleci/node:lts-browsers
    steps:
      - checkout
      - run:
          name: Provision
          command: |
            node -v
            npm -v
            npm install
            npm run webpack:dev
          working_directory: ./ui.apps
      - run:
          name: Run Unit Tests (Karma)
          command: npm test
          working_directory: ./ui.apps
      - store_test_results:
          path: ui.apps/karma-junit
      - store_artifacts:
          path: ui.apps/karma-junit
      - codecov/upload:
          flags: karma
          
  jest:
    docker:
      - image: circleci/node:lts-browsers
    steps:
      - checkout
      - run:
          name: Provision
          command: |
            node -v
            npm -v
            npm install
          working_directory: ./react-components
      - run:
          name: Run Unit Tests (Jest)
          command: npm run ci
          working_directory: ./react-components
      - store_test_results:
          path: ./react-components/test-results
      - store_artifacts:
          path: ./react-components/test-results
      - codecov/upload:
          flags: jest
 
  integration-test-655:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem:6.5.5
        <<: *docker_auth
    environment:
      AEM: classic
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps
 
  integration-test-cloudready:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem-cloudready:4271
        <<: *docker_auth
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps
    
  integration-test-cloudready-with-addon:
    docker:
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-qp:6.4.4-jdk11
        <<: *docker_auth
      - image: docker-adobe-cif-release.dr-uw2.adobeitc.com/circleci-aem-cloudready:4271
        <<: *docker_auth
    environment:
      AEM: addon
    resource_class: large
    working_directory: /home/circleci/build
    <<: *integration_test_steps

  release:
    executor: cif_executor
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Update permissions
          command: sudo chown -R circleci /usr/local/lib/node_modules
      - run:
          name: Release
          # Only performs a 'mvn deploy' after the 'mvn release:prepare' because circleCI
          # already checks out the git tag like 'mvn release:perform' would do.
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> /home/circleci/.npmrc
            echo $GPG_PRIVATE_KEY | base64 --decode | gpg --batch --import
            mvn -B -s /home/circleci/project/.circleci/settings.xml clean deploy -P release-sign-artifacts,adobe-public -Dskip-it
            rm -rf /home/circleci/.gnupg
            rm -rf /home/circleci/.npmrc

workflows:
  version: 2
  build-and-release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - karma:
          filters:
            tags:
              only: /.*/
      - jest:
          filters:
            tags:
              only: /.*/
      - integration-test-655:
          filters:
            tags:
              only: /.*/
          requires:
            - build
            - karma
            - jest
      - integration-test-cloudready:
          filters:
            tags:
              only: /.*/
          requires:
            - build
            - karma
            - jest
      - integration-test-cloudready-with-addon:
          filters:
            tags:
              only: /.*/
          requires:
            - build
            - karma
            - jest
      - release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^core-cif-components-reactor-\d+\.\d+\.\d+$/